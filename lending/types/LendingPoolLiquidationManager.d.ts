/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LendingPoolLiquidationManagerInterface
  extends ethers.utils.Interface {
  functions: {
    "addressesProvider()": FunctionFragment;
    "core()": FunctionFragment;
    "dataProvider()": FunctionFragment;
    "liquidationCall(address,address,address,uint256,bool)": FunctionFragment;
    "parametersProvider()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addressesProvider",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "core", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "dataProvider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "liquidationCall",
    values: [string, string, string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "parametersProvider",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "addressesProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "core", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "dataProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "liquidationCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parametersProvider",
    data: BytesLike
  ): Result;

  events: {
    "LiquidationCall(address,address,address,uint256,uint256,uint256,address,bool,uint256)": EventFragment;
    "OriginationFeeLiquidated(address,address,address,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LiquidationCall"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OriginationFeeLiquidated"): EventFragment;
}

export class LendingPoolLiquidationManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingPoolLiquidationManagerInterface;

  functions: {
    addressesProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "addressesProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    core(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "core()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    dataProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "dataProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    liquidationCall(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "liquidationCall(address,address,address,uint256,bool)"(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    parametersProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "parametersProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  addressesProvider(overrides?: CallOverrides): Promise<string>;

  "addressesProvider()"(overrides?: CallOverrides): Promise<string>;

  core(overrides?: CallOverrides): Promise<string>;

  "core()"(overrides?: CallOverrides): Promise<string>;

  dataProvider(overrides?: CallOverrides): Promise<string>;

  "dataProvider()"(overrides?: CallOverrides): Promise<string>;

  liquidationCall(
    _collateral: string,
    _reserve: string,
    _user: string,
    _purchaseAmount: BigNumberish,
    _receiveMToken: boolean,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "liquidationCall(address,address,address,uint256,bool)"(
    _collateral: string,
    _reserve: string,
    _user: string,
    _purchaseAmount: BigNumberish,
    _receiveMToken: boolean,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  parametersProvider(overrides?: CallOverrides): Promise<string>;

  "parametersProvider()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addressesProvider(overrides?: CallOverrides): Promise<string>;

    "addressesProvider()"(overrides?: CallOverrides): Promise<string>;

    core(overrides?: CallOverrides): Promise<string>;

    "core()"(overrides?: CallOverrides): Promise<string>;

    dataProvider(overrides?: CallOverrides): Promise<string>;

    "dataProvider()"(overrides?: CallOverrides): Promise<string>;

    liquidationCall(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: string;
    }>;

    "liquidationCall(address,address,address,uint256,bool)"(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: string;
    }>;

    parametersProvider(overrides?: CallOverrides): Promise<string>;

    "parametersProvider()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    LiquidationCall(
      _collateral: string | null,
      _reserve: string | null,
      _user: string | null,
      _purchaseAmount: null,
      _liquidatedCollateralAmount: null,
      _accruedBorrowInterest: null,
      _liquidator: null,
      _receiveMToken: null,
      _timestamp: null
    ): EventFilter;

    OriginationFeeLiquidated(
      _collateral: string | null,
      _reserve: string | null,
      _user: string | null,
      _feeLiquidated: null,
      _liquidatedCollateralForFee: null,
      _timestamp: null
    ): EventFilter;
  };

  estimateGas: {
    addressesProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "addressesProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    core(overrides?: CallOverrides): Promise<BigNumber>;

    "core()"(overrides?: CallOverrides): Promise<BigNumber>;

    dataProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "dataProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    liquidationCall(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "liquidationCall(address,address,address,uint256,bool)"(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    parametersProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "parametersProvider()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addressesProvider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "addressesProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    core(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "core()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    dataProvider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "dataProvider()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    liquidationCall(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "liquidationCall(address,address,address,uint256,bool)"(
      _collateral: string,
      _reserve: string,
      _user: string,
      _purchaseAmount: BigNumberish,
      _receiveMToken: boolean,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    parametersProvider(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "parametersProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
