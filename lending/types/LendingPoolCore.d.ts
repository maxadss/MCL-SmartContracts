/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LendingPoolCoreInterface extends ethers.utils.Interface {
  functions: {
    "CORE_REVISION()": FunctionFragment;
    "activateReserve(address)": FunctionFragment;
    "addressesProvider()": FunctionFragment;
    "deactivateReserve(address)": FunctionFragment;
    "disableBorrowingOnReserve(address)": FunctionFragment;
    "disableReserveAsCollateral(address)": FunctionFragment;
    "disableReserveStableBorrowRate(address)": FunctionFragment;
    "enableBorrowingOnReserve(address,bool)": FunctionFragment;
    "enableReserveAsCollateral(address,uint256,uint256,uint256)": FunctionFragment;
    "enableReserveStableBorrowRate(address)": FunctionFragment;
    "feeProvider()": FunctionFragment;
    "freezeReserve(address)": FunctionFragment;
    "getReserveAvailableLiquidity(address)": FunctionFragment;
    "getReserveConfiguration(address)": FunctionFragment;
    "getReserveCurrentAverageStableBorrowRate(address)": FunctionFragment;
    "getReserveCurrentLiquidityRate(address)": FunctionFragment;
    "getReserveCurrentStableBorrowRate(address)": FunctionFragment;
    "getReserveCurrentVariableBorrowRate(address)": FunctionFragment;
    "getReserveDecimals(address)": FunctionFragment;
    "getReserveInterestRateStrategyAddress(address)": FunctionFragment;
    "getReserveIsActive(address)": FunctionFragment;
    "getReserveIsFreezed(address)": FunctionFragment;
    "getReserveIsStableBorrowRateEnabled(address)": FunctionFragment;
    "getReserveLastUpdate(address)": FunctionFragment;
    "getReserveLiquidationBonus(address)": FunctionFragment;
    "getReserveLiquidationThreshold(address)": FunctionFragment;
    "getReserveLiquidityCumulativeIndex(address)": FunctionFragment;
    "getReserveNormalizedIncome(address)": FunctionFragment;
    "getReserveTotalBorrows(address)": FunctionFragment;
    "getReserveTotalBorrowsStable(address)": FunctionFragment;
    "getReserveTotalBorrowsVariable(address)": FunctionFragment;
    "getReserveTotalLiquidity(address)": FunctionFragment;
    "getReserveUtilizationRate(address)": FunctionFragment;
    "getReserveVariableBorrowsCumulativeIndex(address)": FunctionFragment;
    "getReservemTokenAddress(address)": FunctionFragment;
    "getReserves()": FunctionFragment;
    "getTotalmTokenSupply(address)": FunctionFragment;
    "getUserBasicReserveData(address,address)": FunctionFragment;
    "getUserBorrowBalances(address,address)": FunctionFragment;
    "getUserCurrentBorrowRateMode(address,address)": FunctionFragment;
    "getUserCurrentStableBorrowRate(address,address)": FunctionFragment;
    "getUserLastUpdate(address,address)": FunctionFragment;
    "getUserOriginationFee(address,address)": FunctionFragment;
    "getUserStakedTokenBalance(address)": FunctionFragment;
    "getUserUnderlyingAssetBalance(address,address)": FunctionFragment;
    "getUserVariableBorrowCumulativeIndex(address,address)": FunctionFragment;
    "getUsermTokenBalance(address,address)": FunctionFragment;
    "initReserve(address,address,uint256,address)": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "isReserveBorrowingEnabled(address)": FunctionFragment;
    "isReserveUsageAsCollateralEnabled(address)": FunctionFragment;
    "isUserAllowedToBorrowAtStable(address,address,uint256)": FunctionFragment;
    "isUserUseReserveAsCollateralEnabled(address,address)": FunctionFragment;
    "lendingPoolAddress()": FunctionFragment;
    "liquidateFee(address,uint256)": FunctionFragment;
    "parametersProvider()": FunctionFragment;
    "refreshConfiguration()": FunctionFragment;
    "removeLastAddedReserve(address)": FunctionFragment;
    "reservesList(uint256)": FunctionFragment;
    "rewardManager()": FunctionFragment;
    "setReserveBaseLTVasCollateral(address,uint256)": FunctionFragment;
    "setReserveDecimals(address,uint256)": FunctionFragment;
    "setReserveInterestRateStrategyAddress(address,address)": FunctionFragment;
    "setReserveLiquidationBonus(address,uint256)": FunctionFragment;
    "setReserveLiquidationThreshold(address,uint256)": FunctionFragment;
    "setUserUseReserveAsCollateral(address,address,bool)": FunctionFragment;
    "transferToFeeCollectionAddress(address,address,uint256,bool)": FunctionFragment;
    "transferToReserve(address,address,uint256)": FunctionFragment;
    "transferToUser(address,address,uint256)": FunctionFragment;
    "unfreezeReserve(address)": FunctionFragment;
    "updateStateOnBorrow(address,address,uint256,uint256,uint8)": FunctionFragment;
    "updateStateOnDeposit(address,address,uint256,bool)": FunctionFragment;
    "updateStateOnFlashLoan(address)": FunctionFragment;
    "updateStateOnLiquidation(address,address,address,uint256,uint256,uint256,uint256,uint256,bool)": FunctionFragment;
    "updateStateOnRebalance(address,address,uint256)": FunctionFragment;
    "updateStateOnRedeem(address,address,uint256,bool)": FunctionFragment;
    "updateStateOnRepay(address,address,uint256,uint256,uint256,bool)": FunctionFragment;
    "updateStateOnSwapRate(address,address,uint256,uint256,uint256,uint8)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "CORE_REVISION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "activateReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addressesProvider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "disableBorrowingOnReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "disableReserveAsCollateral",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "disableReserveStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "enableBorrowingOnReserve",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "enableReserveAsCollateral",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "enableReserveStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "feeProvider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "freezeReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveAvailableLiquidity",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveConfiguration",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveCurrentAverageStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveCurrentLiquidityRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveCurrentStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveCurrentVariableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveDecimals",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveInterestRateStrategyAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveIsActive",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveIsFreezed",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveIsStableBorrowRateEnabled",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveLastUpdate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveLiquidationBonus",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveLiquidationThreshold",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveLiquidityCumulativeIndex",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveNormalizedIncome",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveTotalBorrows",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveTotalBorrowsStable",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveTotalBorrowsVariable",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveTotalLiquidity",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveUtilizationRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveVariableBorrowsCumulativeIndex",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReservemTokenAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserves",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalmTokenSupply",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserBasicReserveData",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserBorrowBalances",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserCurrentBorrowRateMode",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserCurrentStableBorrowRate",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserLastUpdate",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserOriginationFee",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserStakedTokenBalance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserUnderlyingAssetBalance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserVariableBorrowCumulativeIndex",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUsermTokenBalance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initReserve",
    values: [string, string, BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isReserveBorrowingEnabled",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isReserveUsageAsCollateralEnabled",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isUserAllowedToBorrowAtStable",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isUserUseReserveAsCollateralEnabled",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "lendingPoolAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "liquidateFee",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "parametersProvider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "refreshConfiguration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeLastAddedReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "reservesList",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "rewardManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveBaseLTVasCollateral",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveDecimals",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveInterestRateStrategyAddress",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveLiquidationBonus",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveLiquidationThreshold",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setUserUseReserveAsCollateral",
    values: [string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "transferToFeeCollectionAddress",
    values: [string, string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "transferToReserve",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferToUser",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unfreezeReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnBorrow",
    values: [string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnDeposit",
    values: [string, string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnFlashLoan",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnLiquidation",
    values: [
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnRebalance",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnRedeem",
    values: [string, string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnRepay",
    values: [string, string, BigNumberish, BigNumberish, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStateOnSwapRate",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "CORE_REVISION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activateReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addressesProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deactivateReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableBorrowingOnReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableReserveAsCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableReserveStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableBorrowingOnReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableReserveAsCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableReserveStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "feeProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "freezeReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveAvailableLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveCurrentAverageStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveCurrentLiquidityRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveCurrentStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveCurrentVariableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveDecimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveInterestRateStrategyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveIsActive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveIsFreezed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveIsStableBorrowRateEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveLastUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveLiquidationBonus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveLiquidationThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveLiquidityCumulativeIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveNormalizedIncome",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveTotalBorrows",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveTotalBorrowsStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveTotalBorrowsVariable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveTotalLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveUtilizationRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveVariableBorrowsCumulativeIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReservemTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalmTokenSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserBasicReserveData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserBorrowBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserCurrentBorrowRateMode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserCurrentStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserLastUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserOriginationFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserStakedTokenBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserUnderlyingAssetBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserVariableBorrowCumulativeIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUsermTokenBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isReserveBorrowingEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isReserveUsageAsCollateralEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isUserAllowedToBorrowAtStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isUserUseReserveAsCollateralEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lendingPoolAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "liquidateFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parametersProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refreshConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLastAddedReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reservesList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rewardManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveBaseLTVasCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveDecimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveInterestRateStrategyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveLiquidationBonus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveLiquidationThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUserUseReserveAsCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferToFeeCollectionAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferToReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferToUser",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unfreezeReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnFlashLoan",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnRebalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnRedeem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnRepay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStateOnSwapRate",
    data: BytesLike
  ): Result;

  events: {
    "ReserveUpdated(address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ReserveUpdated"): EventFragment;
}

export class LendingPoolCore extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingPoolCoreInterface;

  functions: {
    CORE_REVISION(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "CORE_REVISION()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    activateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addressesProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "addressesProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    deactivateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    feeProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "feeProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    freezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getReserveAvailableLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveAvailableLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveConfiguration(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    "getReserveConfiguration(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    getReserveCurrentAverageStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveCurrentLiquidityRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveCurrentLiquidityRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveCurrentStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveCurrentStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveCurrentVariableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveCurrentVariableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveDecimals(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveDecimals(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveInterestRateStrategyAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getReserveInterestRateStrategyAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getReserveIsActive(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "getReserveIsActive(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getReserveIsFreezed(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "getReserveIsFreezed(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getReserveIsStableBorrowRateEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "getReserveIsStableBorrowRateEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getReserveLastUpdate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      timestamp: number;
      0: number;
    }>;

    "getReserveLastUpdate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      timestamp: number;
      0: number;
    }>;

    getReserveLiquidationBonus(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveLiquidationBonus(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveLiquidationThreshold(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveLiquidationThreshold(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveLiquidityCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveLiquidityCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveNormalizedIncome(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveNormalizedIncome(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveTotalBorrows(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveTotalBorrows(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveTotalBorrowsStable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveTotalBorrowsStable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveTotalBorrowsVariable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveTotalBorrowsVariable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveTotalLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveTotalLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveUtilizationRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveUtilizationRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReserveVariableBorrowsCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getReserveVariableBorrowsCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getReservemTokenAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getReservemTokenAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getReserves(
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getReserves()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    getTotalmTokenSupply(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getTotalmTokenSupply(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserBasicReserveData(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    "getUserBasicReserveData(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    getUserBorrowBalances(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "getUserBorrowBalances(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    getUserCurrentBorrowRateMode(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "getUserCurrentBorrowRateMode(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    getUserCurrentStableBorrowRate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUserCurrentStableBorrowRate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserLastUpdate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      timestamp: BigNumber;
      0: BigNumber;
    }>;

    "getUserLastUpdate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      timestamp: BigNumber;
      0: BigNumber;
    }>;

    getUserOriginationFee(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUserOriginationFee(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserStakedTokenBalance(
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUserStakedTokenBalance(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserUnderlyingAssetBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUserUnderlyingAssetBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUserVariableBorrowCumulativeIndex(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUserVariableBorrowCumulativeIndex(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getUsermTokenBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getUsermTokenBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    initReserve(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initReserve(address,address,uint256,address)"(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initialize(
      _addresessProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      _addresessProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isReserveBorrowingEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isReserveBorrowingEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isReserveUsageAsCollateralEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isReserveUsageAsCollateralEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isUserAllowedToBorrowAtStable(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isUserAllowedToBorrowAtStable(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isUserUseReserveAsCollateralEnabled(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isUserUseReserveAsCollateralEnabled(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    lendingPoolAddress(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "lendingPoolAddress()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    liquidateFee(
      _token: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "liquidateFee(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    parametersProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "parametersProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    refreshConfiguration(overrides?: Overrides): Promise<ContractTransaction>;

    "refreshConfiguration()"(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    reservesList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "reservesList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    rewardManager(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "rewardManager()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setUserUseReserveAsCollateral(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setUserUseReserveAsCollateral(address,address,bool)"(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferToFeeCollectionAddress(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "transferToFeeCollectionAddress(address,address,uint256,bool)"(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    transferToReserve(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "transferToReserve(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    transferToUser(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferToUser(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unfreezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnBorrow(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnBorrow(address,address,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnDeposit(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnDeposit(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnFlashLoan(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnFlashLoan(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnLiquidation(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnLiquidation(address,address,address,uint256,uint256,uint256,uint256,uint256,bool)"(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnRebalance(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnRebalance(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnRedeem(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnRedeem(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnRepay(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnRepay(address,address,uint256,uint256,uint256,bool)"(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStateOnSwapRate(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateStateOnSwapRate(address,address,uint256,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  CORE_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

  "CORE_REVISION()"(overrides?: CallOverrides): Promise<BigNumber>;

  activateReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "activateReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addressesProvider(overrides?: CallOverrides): Promise<string>;

  "addressesProvider()"(overrides?: CallOverrides): Promise<string>;

  deactivateReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deactivateReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableBorrowingOnReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableBorrowingOnReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableReserveAsCollateral(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableReserveAsCollateral(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableReserveStableBorrowRate(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableReserveStableBorrowRate(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableBorrowingOnReserve(
    _reserve: string,
    _stableBorrowRateEnabled: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableBorrowingOnReserve(address,bool)"(
    _reserve: string,
    _stableBorrowRateEnabled: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableReserveAsCollateral(
    _reserve: string,
    _baseLTVasCollateral: BigNumberish,
    _liquidationThreshold: BigNumberish,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
    _reserve: string,
    _baseLTVasCollateral: BigNumberish,
    _liquidationThreshold: BigNumberish,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableReserveStableBorrowRate(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableReserveStableBorrowRate(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  feeProvider(overrides?: CallOverrides): Promise<string>;

  "feeProvider()"(overrides?: CallOverrides): Promise<string>;

  freezeReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "freezeReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getReserveAvailableLiquidity(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveAvailableLiquidity(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveConfiguration(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: boolean;
  }>;

  "getReserveConfiguration(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: boolean;
  }>;

  getReserveCurrentAverageStableBorrowRate(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveCurrentAverageStableBorrowRate(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveCurrentLiquidityRate(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveCurrentLiquidityRate(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveCurrentStableBorrowRate(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveCurrentStableBorrowRate(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveCurrentVariableBorrowRate(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveCurrentVariableBorrowRate(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveDecimals(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveDecimals(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveInterestRateStrategyAddress(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getReserveInterestRateStrategyAddress(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getReserveIsActive(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getReserveIsActive(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getReserveIsFreezed(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getReserveIsFreezed(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getReserveIsStableBorrowRateEnabled(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getReserveIsStableBorrowRateEnabled(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getReserveLastUpdate(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<number>;

  "getReserveLastUpdate(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<number>;

  getReserveLiquidationBonus(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveLiquidationBonus(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveLiquidationThreshold(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveLiquidationThreshold(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveLiquidityCumulativeIndex(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveLiquidityCumulativeIndex(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveNormalizedIncome(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveNormalizedIncome(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveTotalBorrows(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveTotalBorrows(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveTotalBorrowsStable(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveTotalBorrowsStable(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveTotalBorrowsVariable(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveTotalBorrowsVariable(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveTotalLiquidity(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveTotalLiquidity(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveUtilizationRate(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveUtilizationRate(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveVariableBorrowsCumulativeIndex(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveVariableBorrowsCumulativeIndex(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReservemTokenAddress(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getReservemTokenAddress(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getReserves(overrides?: CallOverrides): Promise<string[]>;

  "getReserves()"(overrides?: CallOverrides): Promise<string[]>;

  getTotalmTokenSupply(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTotalmTokenSupply(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserBasicReserveData(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: boolean;
  }>;

  "getUserBasicReserveData(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: boolean;
  }>;

  getUserBorrowBalances(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "getUserBorrowBalances(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  getUserCurrentBorrowRateMode(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<number>;

  "getUserCurrentBorrowRateMode(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<number>;

  getUserCurrentStableBorrowRate(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserCurrentStableBorrowRate(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserLastUpdate(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserLastUpdate(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserOriginationFee(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserOriginationFee(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserStakedTokenBalance(
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserStakedTokenBalance(address)"(
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserUnderlyingAssetBalance(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserUnderlyingAssetBalance(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserVariableBorrowCumulativeIndex(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUserVariableBorrowCumulativeIndex(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUsermTokenBalance(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUsermTokenBalance(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  initReserve(
    _reserve: string,
    _mTokenAddress: string,
    _decimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initReserve(address,address,uint256,address)"(
    _reserve: string,
    _mTokenAddress: string,
    _decimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initialize(
    _addresessProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    _addresessProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isReserveBorrowingEnabled(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isReserveBorrowingEnabled(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isReserveUsageAsCollateralEnabled(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isReserveUsageAsCollateralEnabled(address)"(
    _reserve: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isUserAllowedToBorrowAtStable(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isUserAllowedToBorrowAtStable(address,address,uint256)"(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isUserUseReserveAsCollateralEnabled(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isUserUseReserveAsCollateralEnabled(address,address)"(
    _reserve: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  lendingPoolAddress(overrides?: CallOverrides): Promise<string>;

  "lendingPoolAddress()"(overrides?: CallOverrides): Promise<string>;

  liquidateFee(
    _token: string,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "liquidateFee(address,uint256)"(
    _token: string,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  parametersProvider(overrides?: CallOverrides): Promise<string>;

  "parametersProvider()"(overrides?: CallOverrides): Promise<string>;

  refreshConfiguration(overrides?: Overrides): Promise<ContractTransaction>;

  "refreshConfiguration()"(overrides?: Overrides): Promise<ContractTransaction>;

  removeLastAddedReserve(
    _reserveToRemove: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeLastAddedReserve(address)"(
    _reserveToRemove: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  reservesList(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "reservesList(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  rewardManager(overrides?: CallOverrides): Promise<string>;

  "rewardManager()"(overrides?: CallOverrides): Promise<string>;

  setReserveBaseLTVasCollateral(
    _reserve: string,
    _ltv: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveBaseLTVasCollateral(address,uint256)"(
    _reserve: string,
    _ltv: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveDecimals(
    _reserve: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveDecimals(address,uint256)"(
    _reserve: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveInterestRateStrategyAddress(
    _reserve: string,
    _rateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveInterestRateStrategyAddress(address,address)"(
    _reserve: string,
    _rateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveLiquidationBonus(
    _reserve: string,
    _bonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveLiquidationBonus(address,uint256)"(
    _reserve: string,
    _bonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveLiquidationThreshold(
    _reserve: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveLiquidationThreshold(address,uint256)"(
    _reserve: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setUserUseReserveAsCollateral(
    _reserve: string,
    _user: string,
    _useAsCollateral: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setUserUseReserveAsCollateral(address,address,bool)"(
    _reserve: string,
    _user: string,
    _useAsCollateral: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferToFeeCollectionAddress(
    _token: string,
    _user: string,
    _amount: BigNumberish,
    _transferFromCore: boolean,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "transferToFeeCollectionAddress(address,address,uint256,bool)"(
    _token: string,
    _user: string,
    _amount: BigNumberish,
    _transferFromCore: boolean,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  transferToReserve(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "transferToReserve(address,address,uint256)"(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  transferToUser(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferToUser(address,address,uint256)"(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unfreezeReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unfreezeReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnBorrow(
    _reserve: string,
    _user: string,
    _amountBorrowed: BigNumberish,
    _borrowFee: BigNumberish,
    _rateMode: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnBorrow(address,address,uint256,uint256,uint8)"(
    _reserve: string,
    _user: string,
    _amountBorrowed: BigNumberish,
    _borrowFee: BigNumberish,
    _rateMode: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnDeposit(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    _isFirstDeposit: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnDeposit(address,address,uint256,bool)"(
    _reserve: string,
    _user: string,
    _amount: BigNumberish,
    _isFirstDeposit: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnFlashLoan(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnFlashLoan(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnLiquidation(
    _principalReserve: string,
    _collateralReserve: string,
    _user: string,
    _amountToLiquidate: BigNumberish,
    _collateralToLiquidate: BigNumberish,
    _feeLiquidated: BigNumberish,
    _liquidatedCollateralForFee: BigNumberish,
    _balanceIncrease: BigNumberish,
    _liquidatorReceivesMToken: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnLiquidation(address,address,address,uint256,uint256,uint256,uint256,uint256,bool)"(
    _principalReserve: string,
    _collateralReserve: string,
    _user: string,
    _amountToLiquidate: BigNumberish,
    _collateralToLiquidate: BigNumberish,
    _feeLiquidated: BigNumberish,
    _liquidatedCollateralForFee: BigNumberish,
    _balanceIncrease: BigNumberish,
    _liquidatorReceivesMToken: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnRebalance(
    _reserve: string,
    _user: string,
    _balanceIncrease: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnRebalance(address,address,uint256)"(
    _reserve: string,
    _user: string,
    _balanceIncrease: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnRedeem(
    _reserve: string,
    _user: string,
    _amountRedeemed: BigNumberish,
    _userRedeemedEverything: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnRedeem(address,address,uint256,bool)"(
    _reserve: string,
    _user: string,
    _amountRedeemed: BigNumberish,
    _userRedeemedEverything: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnRepay(
    _reserve: string,
    _user: string,
    _paybackAmountMinusFees: BigNumberish,
    _originationFeeRepaid: BigNumberish,
    _balanceIncrease: BigNumberish,
    _repaidWholeLoan: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnRepay(address,address,uint256,uint256,uint256,bool)"(
    _reserve: string,
    _user: string,
    _paybackAmountMinusFees: BigNumberish,
    _originationFeeRepaid: BigNumberish,
    _balanceIncrease: BigNumberish,
    _repaidWholeLoan: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStateOnSwapRate(
    _reserve: string,
    _user: string,
    _principalBorrowBalance: BigNumberish,
    _compoundedBorrowBalance: BigNumberish,
    _balanceIncrease: BigNumberish,
    _currentRateMode: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateStateOnSwapRate(address,address,uint256,uint256,uint256,uint8)"(
    _reserve: string,
    _user: string,
    _principalBorrowBalance: BigNumberish,
    _compoundedBorrowBalance: BigNumberish,
    _balanceIncrease: BigNumberish,
    _currentRateMode: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    CORE_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    "CORE_REVISION()"(overrides?: CallOverrides): Promise<BigNumber>;

    activateReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addressesProvider(overrides?: CallOverrides): Promise<string>;

    "addressesProvider()"(overrides?: CallOverrides): Promise<string>;

    deactivateReserve(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    feeProvider(overrides?: CallOverrides): Promise<string>;

    "feeProvider()"(overrides?: CallOverrides): Promise<string>;

    freezeReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getReserveAvailableLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveAvailableLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveConfiguration(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    "getReserveConfiguration(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    getReserveCurrentAverageStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentLiquidityRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentLiquidityRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentVariableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentVariableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveDecimals(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveDecimals(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveInterestRateStrategyAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getReserveInterestRateStrategyAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getReserveIsActive(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getReserveIsActive(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getReserveIsFreezed(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getReserveIsFreezed(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getReserveIsStableBorrowRateEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getReserveIsStableBorrowRateEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getReserveLastUpdate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<number>;

    "getReserveLastUpdate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<number>;

    getReserveLiquidationBonus(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLiquidationBonus(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveLiquidationThreshold(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLiquidationThreshold(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveLiquidityCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLiquidityCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveNormalizedIncome(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveNormalizedIncome(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrows(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrows(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsStable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsStable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsVariable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsVariable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveUtilizationRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveUtilizationRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveVariableBorrowsCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveVariableBorrowsCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReservemTokenAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getReservemTokenAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getReserves(overrides?: CallOverrides): Promise<string[]>;

    "getReserves()"(overrides?: CallOverrides): Promise<string[]>;

    getTotalmTokenSupply(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalmTokenSupply(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserBasicReserveData(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    "getUserBasicReserveData(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: boolean;
    }>;

    getUserBorrowBalances(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "getUserBorrowBalances(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    getUserCurrentBorrowRateMode(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<number>;

    "getUserCurrentBorrowRateMode(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<number>;

    getUserCurrentStableBorrowRate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserCurrentStableBorrowRate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserLastUpdate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserLastUpdate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserOriginationFee(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserOriginationFee(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserStakedTokenBalance(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserStakedTokenBalance(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserUnderlyingAssetBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserUnderlyingAssetBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserVariableBorrowCumulativeIndex(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserVariableBorrowCumulativeIndex(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUsermTokenBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUsermTokenBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initReserve(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initReserve(address,address,uint256,address)"(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(
      _addresessProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address)"(
      _addresessProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isReserveBorrowingEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isReserveBorrowingEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isReserveUsageAsCollateralEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isReserveUsageAsCollateralEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isUserAllowedToBorrowAtStable(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isUserAllowedToBorrowAtStable(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isUserUseReserveAsCollateralEnabled(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isUserUseReserveAsCollateralEnabled(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    lendingPoolAddress(overrides?: CallOverrides): Promise<string>;

    "lendingPoolAddress()"(overrides?: CallOverrides): Promise<string>;

    liquidateFee(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "liquidateFee(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    parametersProvider(overrides?: CallOverrides): Promise<string>;

    "parametersProvider()"(overrides?: CallOverrides): Promise<string>;

    refreshConfiguration(overrides?: CallOverrides): Promise<void>;

    "refreshConfiguration()"(overrides?: CallOverrides): Promise<void>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: CallOverrides
    ): Promise<void>;

    reservesList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "reservesList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    rewardManager(overrides?: CallOverrides): Promise<string>;

    "rewardManager()"(overrides?: CallOverrides): Promise<string>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setUserUseReserveAsCollateral(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setUserUseReserveAsCollateral(address,address,bool)"(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    transferToFeeCollectionAddress(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferToFeeCollectionAddress(address,address,uint256,bool)"(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    transferToReserve(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferToReserve(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferToUser(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferToUser(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unfreezeReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStateOnBorrow(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    "updateStateOnBorrow(address,address,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    updateStateOnDeposit(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStateOnDeposit(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStateOnFlashLoan(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStateOnFlashLoan(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStateOnLiquidation(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStateOnLiquidation(address,address,address,uint256,uint256,uint256,uint256,uint256,bool)"(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStateOnRebalance(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "updateStateOnRebalance(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateStateOnRedeem(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStateOnRedeem(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStateOnRepay(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStateOnRepay(address,address,uint256,uint256,uint256,bool)"(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStateOnSwapRate(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
      1: BigNumber;
    }>;

    "updateStateOnSwapRate(address,address,uint256,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
      1: BigNumber;
    }>;
  };

  filters: {
    ReserveUpdated(
      reserve: string | null,
      liquidityRate: null,
      stableBorrowRate: null,
      variableBorrowRate: null,
      liquidityIndex: null,
      variableBorrowIndex: null
    ): EventFilter;
  };

  estimateGas: {
    CORE_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    "CORE_REVISION()"(overrides?: CallOverrides): Promise<BigNumber>;

    activateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addressesProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "addressesProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    deactivateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    feeProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "feeProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    freezeReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getReserveAvailableLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveAvailableLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveConfiguration(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveConfiguration(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentAverageStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentLiquidityRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentLiquidityRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentVariableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentVariableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveDecimals(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveDecimals(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveInterestRateStrategyAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveInterestRateStrategyAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveIsActive(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveIsActive(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveIsFreezed(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveIsFreezed(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveIsStableBorrowRateEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveIsStableBorrowRateEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveLastUpdate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLastUpdate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveLiquidationBonus(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLiquidationBonus(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveLiquidationThreshold(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLiquidationThreshold(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveLiquidityCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveLiquidityCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveNormalizedIncome(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveNormalizedIncome(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrows(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrows(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsStable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsStable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsVariable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsVariable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveUtilizationRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveUtilizationRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveVariableBorrowsCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveVariableBorrowsCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReservemTokenAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReservemTokenAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserves(overrides?: CallOverrides): Promise<BigNumber>;

    "getReserves()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalmTokenSupply(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalmTokenSupply(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserBasicReserveData(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserBasicReserveData(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserBorrowBalances(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserBorrowBalances(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserCurrentBorrowRateMode(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserCurrentBorrowRateMode(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserCurrentStableBorrowRate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserCurrentStableBorrowRate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserLastUpdate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserLastUpdate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserOriginationFee(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserOriginationFee(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserStakedTokenBalance(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserStakedTokenBalance(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserUnderlyingAssetBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserUnderlyingAssetBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserVariableBorrowCumulativeIndex(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserVariableBorrowCumulativeIndex(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUsermTokenBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUsermTokenBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initReserve(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initReserve(address,address,uint256,address)"(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initialize(
      _addresessProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address)"(
      _addresessProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isReserveBorrowingEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isReserveBorrowingEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isReserveUsageAsCollateralEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isReserveUsageAsCollateralEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isUserAllowedToBorrowAtStable(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isUserAllowedToBorrowAtStable(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isUserUseReserveAsCollateralEnabled(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isUserUseReserveAsCollateralEnabled(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lendingPoolAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "lendingPoolAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    liquidateFee(
      _token: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "liquidateFee(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    parametersProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "parametersProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    refreshConfiguration(overrides?: Overrides): Promise<BigNumber>;

    "refreshConfiguration()"(overrides?: Overrides): Promise<BigNumber>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    reservesList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "reservesList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    rewardManager(overrides?: CallOverrides): Promise<BigNumber>;

    "rewardManager()"(overrides?: CallOverrides): Promise<BigNumber>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setUserUseReserveAsCollateral(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setUserUseReserveAsCollateral(address,address,bool)"(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferToFeeCollectionAddress(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "transferToFeeCollectionAddress(address,address,uint256,bool)"(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    transferToReserve(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "transferToReserve(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    transferToUser(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferToUser(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unfreezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnBorrow(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnBorrow(address,address,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnDeposit(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnDeposit(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnFlashLoan(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnFlashLoan(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnLiquidation(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnLiquidation(address,address,address,uint256,uint256,uint256,uint256,uint256,bool)"(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnRebalance(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnRebalance(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnRedeem(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnRedeem(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnRepay(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnRepay(address,address,uint256,uint256,uint256,bool)"(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStateOnSwapRate(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateStateOnSwapRate(address,address,uint256,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CORE_REVISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CORE_REVISION()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    activateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addressesProvider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "addressesProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deactivateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    feeProvider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "feeProvider()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    freezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getReserveAvailableLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveAvailableLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveConfiguration(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveConfiguration(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveCurrentAverageStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveCurrentLiquidityRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveCurrentLiquidityRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveCurrentStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveCurrentStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveCurrentVariableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveCurrentVariableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveDecimals(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveDecimals(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveInterestRateStrategyAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveInterestRateStrategyAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveIsActive(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveIsActive(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveIsFreezed(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveIsFreezed(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveIsStableBorrowRateEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveIsStableBorrowRateEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveLastUpdate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveLastUpdate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveLiquidationBonus(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveLiquidationBonus(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveLiquidationThreshold(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveLiquidationThreshold(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveLiquidityCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveLiquidityCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveNormalizedIncome(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveNormalizedIncome(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveTotalBorrows(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveTotalBorrows(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveTotalBorrowsStable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveTotalBorrowsStable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveTotalBorrowsVariable(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveTotalBorrowsVariable(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveTotalLiquidity(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveTotalLiquidity(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveUtilizationRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveUtilizationRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveVariableBorrowsCumulativeIndex(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveVariableBorrowsCumulativeIndex(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReservemTokenAddress(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReservemTokenAddress(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserves(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getReserves()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTotalmTokenSupply(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalmTokenSupply(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserBasicReserveData(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserBasicReserveData(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserBorrowBalances(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserBorrowBalances(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserCurrentBorrowRateMode(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserCurrentBorrowRateMode(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserCurrentStableBorrowRate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserCurrentStableBorrowRate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserLastUpdate(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserLastUpdate(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserOriginationFee(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserOriginationFee(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserStakedTokenBalance(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserStakedTokenBalance(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserUnderlyingAssetBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserUnderlyingAssetBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserVariableBorrowCumulativeIndex(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserVariableBorrowCumulativeIndex(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUsermTokenBalance(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUsermTokenBalance(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initReserve(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initReserve(address,address,uint256,address)"(
      _reserve: string,
      _mTokenAddress: string,
      _decimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _addresessProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      _addresessProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isReserveBorrowingEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isReserveBorrowingEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isReserveUsageAsCollateralEnabled(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isReserveUsageAsCollateralEnabled(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isUserAllowedToBorrowAtStable(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isUserAllowedToBorrowAtStable(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isUserUseReserveAsCollateralEnabled(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isUserUseReserveAsCollateralEnabled(address,address)"(
      _reserve: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lendingPoolAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lendingPoolAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    liquidateFee(
      _token: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "liquidateFee(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    parametersProvider(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "parametersProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    refreshConfiguration(overrides?: Overrides): Promise<PopulatedTransaction>;

    "refreshConfiguration()"(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    reservesList(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "reservesList(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    rewardManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "rewardManager()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setUserUseReserveAsCollateral(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setUserUseReserveAsCollateral(address,address,bool)"(
      _reserve: string,
      _user: string,
      _useAsCollateral: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferToFeeCollectionAddress(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "transferToFeeCollectionAddress(address,address,uint256,bool)"(
      _token: string,
      _user: string,
      _amount: BigNumberish,
      _transferFromCore: boolean,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    transferToReserve(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "transferToReserve(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    transferToUser(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferToUser(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unfreezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnBorrow(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnBorrow(address,address,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _amountBorrowed: BigNumberish,
      _borrowFee: BigNumberish,
      _rateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnDeposit(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnDeposit(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amount: BigNumberish,
      _isFirstDeposit: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnFlashLoan(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnFlashLoan(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnLiquidation(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnLiquidation(address,address,address,uint256,uint256,uint256,uint256,uint256,bool)"(
      _principalReserve: string,
      _collateralReserve: string,
      _user: string,
      _amountToLiquidate: BigNumberish,
      _collateralToLiquidate: BigNumberish,
      _feeLiquidated: BigNumberish,
      _liquidatedCollateralForFee: BigNumberish,
      _balanceIncrease: BigNumberish,
      _liquidatorReceivesMToken: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnRebalance(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnRebalance(address,address,uint256)"(
      _reserve: string,
      _user: string,
      _balanceIncrease: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnRedeem(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnRedeem(address,address,uint256,bool)"(
      _reserve: string,
      _user: string,
      _amountRedeemed: BigNumberish,
      _userRedeemedEverything: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnRepay(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnRepay(address,address,uint256,uint256,uint256,bool)"(
      _reserve: string,
      _user: string,
      _paybackAmountMinusFees: BigNumberish,
      _originationFeeRepaid: BigNumberish,
      _balanceIncrease: BigNumberish,
      _repaidWholeLoan: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStateOnSwapRate(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateStateOnSwapRate(address,address,uint256,uint256,uint256,uint8)"(
      _reserve: string,
      _user: string,
      _principalBorrowBalance: BigNumberish,
      _compoundedBorrowBalance: BigNumberish,
      _balanceIncrease: BigNumberish,
      _currentRateMode: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
