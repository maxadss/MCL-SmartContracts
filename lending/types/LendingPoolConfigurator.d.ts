/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LendingPoolConfiguratorInterface extends ethers.utils.Interface {
  functions: {
    "CONFIGURATOR_REVISION()": FunctionFragment;
    "activateReserve(address)": FunctionFragment;
    "deactivateReserve(address)": FunctionFragment;
    "disableBorrowingOnReserve(address)": FunctionFragment;
    "disableReserveAsCollateral(address)": FunctionFragment;
    "disableReserveStableBorrowRate(address)": FunctionFragment;
    "enableBorrowingOnReserve(address,bool)": FunctionFragment;
    "enableReserveAsCollateral(address,uint256,uint256,uint256)": FunctionFragment;
    "enableReserveStableBorrowRate(address)": FunctionFragment;
    "freezeReserve(address)": FunctionFragment;
    "initReserve(address,uint8,address)": FunctionFragment;
    "initReserveWithData(address,string,string,uint8,address)": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "poolAddressesProvider()": FunctionFragment;
    "refreshLendingPoolCoreConfiguration()": FunctionFragment;
    "removeLastAddedReserve(address)": FunctionFragment;
    "setReserveBaseLTVasCollateral(address,uint256)": FunctionFragment;
    "setReserveDecimals(address,uint256)": FunctionFragment;
    "setReserveInterestRateStrategyAddress(address,address)": FunctionFragment;
    "setReserveLiquidationBonus(address,uint256)": FunctionFragment;
    "setReserveLiquidationThreshold(address,uint256)": FunctionFragment;
    "unfreezeReserve(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "CONFIGURATOR_REVISION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "activateReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "disableBorrowingOnReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "disableReserveAsCollateral",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "disableReserveStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "enableBorrowingOnReserve",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "enableReserveAsCollateral",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "enableReserveStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "freezeReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "initReserve",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initReserveWithData",
    values: [string, string, string, BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "poolAddressesProvider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "refreshLendingPoolCoreConfiguration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeLastAddedReserve",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveBaseLTVasCollateral",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveDecimals",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveInterestRateStrategyAddress",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveLiquidationBonus",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveLiquidationThreshold",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unfreezeReserve",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "CONFIGURATOR_REVISION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activateReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deactivateReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableBorrowingOnReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableReserveAsCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableReserveStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableBorrowingOnReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableReserveAsCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableReserveStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "freezeReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initReserveWithData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "poolAddressesProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refreshLendingPoolCoreConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLastAddedReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveBaseLTVasCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveDecimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveInterestRateStrategyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveLiquidationBonus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveLiquidationThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unfreezeReserve",
    data: BytesLike
  ): Result;

  events: {
    "BorrowingDisabledOnReserve(address)": EventFragment;
    "BorrowingEnabledOnReserve(address,bool)": EventFragment;
    "ReserveActivated(address)": EventFragment;
    "ReserveBaseLtvChanged(address,uint256)": EventFragment;
    "ReserveDeactivated(address)": EventFragment;
    "ReserveDecimalsChanged(address,uint256)": EventFragment;
    "ReserveDisabledAsCollateral(address)": EventFragment;
    "ReserveEnabledAsCollateral(address,uint256,uint256,uint256)": EventFragment;
    "ReserveFreezed(address)": EventFragment;
    "ReserveInitialized(address,address,address)": EventFragment;
    "ReserveInterestRateStrategyChanged(address,address)": EventFragment;
    "ReserveLiquidationBonusChanged(address,uint256)": EventFragment;
    "ReserveLiquidationThresholdChanged(address,uint256)": EventFragment;
    "ReserveRemoved(address)": EventFragment;
    "ReserveUnfreezed(address)": EventFragment;
    "StableRateDisabledOnReserve(address)": EventFragment;
    "StableRateEnabledOnReserve(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BorrowingDisabledOnReserve"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BorrowingEnabledOnReserve"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveBaseLtvChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveDeactivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveDecimalsChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveDisabledAsCollateral"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveEnabledAsCollateral"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveFreezed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveInitialized"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveInterestRateStrategyChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveLiquidationBonusChanged"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReserveLiquidationThresholdChanged"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReserveUnfreezed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "StableRateDisabledOnReserve"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StableRateEnabledOnReserve"): EventFragment;
}

export class LendingPoolConfigurator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingPoolConfiguratorInterface;

  functions: {
    CONFIGURATOR_REVISION(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "CONFIGURATOR_REVISION()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    activateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deactivateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    freezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initReserve(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initReserve(address,uint8,address)"(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initReserveWithData(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initReserveWithData(address,string,string,uint8,address)"(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initialize(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    poolAddressesProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "poolAddressesProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    refreshLendingPoolCoreConfiguration(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "refreshLendingPoolCoreConfiguration()"(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unfreezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

  "CONFIGURATOR_REVISION()"(overrides?: CallOverrides): Promise<BigNumber>;

  activateReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "activateReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deactivateReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deactivateReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableBorrowingOnReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableBorrowingOnReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableReserveAsCollateral(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableReserveAsCollateral(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableReserveStableBorrowRate(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableReserveStableBorrowRate(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableBorrowingOnReserve(
    _reserve: string,
    _stableBorrowRateEnabled: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableBorrowingOnReserve(address,bool)"(
    _reserve: string,
    _stableBorrowRateEnabled: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableReserveAsCollateral(
    _reserve: string,
    _baseLTVasCollateral: BigNumberish,
    _liquidationThreshold: BigNumberish,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
    _reserve: string,
    _baseLTVasCollateral: BigNumberish,
    _liquidationThreshold: BigNumberish,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableReserveStableBorrowRate(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableReserveStableBorrowRate(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  freezeReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "freezeReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initReserve(
    _reserve: string,
    _underlyingAssetDecimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initReserve(address,uint8,address)"(
    _reserve: string,
    _underlyingAssetDecimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initReserveWithData(
    _reserve: string,
    _mTokenName: string,
    _mTokenSymbol: string,
    _underlyingAssetDecimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initReserveWithData(address,string,string,uint8,address)"(
    _reserve: string,
    _mTokenName: string,
    _mTokenSymbol: string,
    _underlyingAssetDecimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initialize(
    _poolAddressesProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    _poolAddressesProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  poolAddressesProvider(overrides?: CallOverrides): Promise<string>;

  "poolAddressesProvider()"(overrides?: CallOverrides): Promise<string>;

  refreshLendingPoolCoreConfiguration(
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "refreshLendingPoolCoreConfiguration()"(
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeLastAddedReserve(
    _reserveToRemove: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeLastAddedReserve(address)"(
    _reserveToRemove: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveBaseLTVasCollateral(
    _reserve: string,
    _ltv: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveBaseLTVasCollateral(address,uint256)"(
    _reserve: string,
    _ltv: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveDecimals(
    _reserve: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveDecimals(address,uint256)"(
    _reserve: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveInterestRateStrategyAddress(
    _reserve: string,
    _rateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveInterestRateStrategyAddress(address,address)"(
    _reserve: string,
    _rateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveLiquidationBonus(
    _reserve: string,
    _bonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveLiquidationBonus(address,uint256)"(
    _reserve: string,
    _bonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveLiquidationThreshold(
    _reserve: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReserveLiquidationThreshold(address,uint256)"(
    _reserve: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unfreezeReserve(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unfreezeReserve(address)"(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    "CONFIGURATOR_REVISION()"(overrides?: CallOverrides): Promise<BigNumber>;

    activateReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    deactivateReserve(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    freezeReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initReserve(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initReserve(address,uint8,address)"(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initReserveWithData(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initReserveWithData(address,string,string,uint8,address)"(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(
      _poolAddressesProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address)"(
      _poolAddressesProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    poolAddressesProvider(overrides?: CallOverrides): Promise<string>;

    "poolAddressesProvider()"(overrides?: CallOverrides): Promise<string>;

    refreshLendingPoolCoreConfiguration(
      overrides?: CallOverrides
    ): Promise<void>;

    "refreshLendingPoolCoreConfiguration()"(
      overrides?: CallOverrides
    ): Promise<void>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unfreezeReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    BorrowingDisabledOnReserve(_reserve: string | null): EventFilter;

    BorrowingEnabledOnReserve(
      _reserve: null,
      _stableRateEnabled: null
    ): EventFilter;

    ReserveActivated(_reserve: string | null): EventFilter;

    ReserveBaseLtvChanged(_reserve: null, _ltv: null): EventFilter;

    ReserveDeactivated(_reserve: string | null): EventFilter;

    ReserveDecimalsChanged(_reserve: null, _decimals: null): EventFilter;

    ReserveDisabledAsCollateral(_reserve: string | null): EventFilter;

    ReserveEnabledAsCollateral(
      _reserve: string | null,
      _ltv: null,
      _liquidationThreshold: null,
      _liquidationBonus: null
    ): EventFilter;

    ReserveFreezed(_reserve: string | null): EventFilter;

    ReserveInitialized(
      _reserve: string | null,
      _mToken: string | null,
      _interestRateStrategyAddress: null
    ): EventFilter;

    ReserveInterestRateStrategyChanged(
      _reserve: null,
      _strategy: null
    ): EventFilter;

    ReserveLiquidationBonusChanged(_reserve: null, _bonus: null): EventFilter;

    ReserveLiquidationThresholdChanged(
      _reserve: null,
      _threshold: null
    ): EventFilter;

    ReserveRemoved(_reserve: string | null): EventFilter;

    ReserveUnfreezed(_reserve: string | null): EventFilter;

    StableRateDisabledOnReserve(_reserve: string | null): EventFilter;

    StableRateEnabledOnReserve(_reserve: string | null): EventFilter;
  };

  estimateGas: {
    CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    "CONFIGURATOR_REVISION()"(overrides?: CallOverrides): Promise<BigNumber>;

    activateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deactivateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    freezeReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initReserve(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initReserve(address,uint8,address)"(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initReserveWithData(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initReserveWithData(address,string,string,uint8,address)"(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initialize(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address)"(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    poolAddressesProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "poolAddressesProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    refreshLendingPoolCoreConfiguration(
      overrides?: Overrides
    ): Promise<BigNumber>;

    "refreshLendingPoolCoreConfiguration()"(
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unfreezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CONFIGURATOR_REVISION(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CONFIGURATOR_REVISION()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    activateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "activateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deactivateReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deactivateReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableBorrowingOnReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableReserveAsCollateral(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableBorrowingOnReserve(address,bool)"(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableReserveAsCollateral(address,uint256,uint256,uint256)"(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableReserveStableBorrowRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableReserveStableBorrowRate(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    freezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "freezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initReserve(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initReserve(address,uint8,address)"(
      _reserve: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initReserveWithData(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initReserveWithData(address,string,string,uint8,address)"(
      _reserve: string,
      _mTokenName: string,
      _mTokenSymbol: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    poolAddressesProvider(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "poolAddressesProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    refreshLendingPoolCoreConfiguration(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "refreshLendingPoolCoreConfiguration()"(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeLastAddedReserve(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeLastAddedReserve(address)"(
      _reserveToRemove: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveBaseLTVasCollateral(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveBaseLTVasCollateral(address,uint256)"(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveDecimals(address,uint256)"(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveInterestRateStrategyAddress(address,address)"(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveLiquidationBonus(address,uint256)"(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReserveLiquidationThreshold(address,uint256)"(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unfreezeReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unfreezeReserve(address)"(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
